package com.danhuang.bridge;

/**
 * 桥接模式										类型维度
 * 原始										台式机⬆____________								(电脑)
 * 		  (电脑)					  桥接模式		    |	  |		|				     	  (品牌)		  (机型)
 * 	(台式机)		(笔记本)		   转化成  ---->	           笔记本|_____|_____|						(联想,戴尔)	(台式机,笔记本)
 * (联想,戴尔)	   (联想,戴尔)             			|	  |		|			或者是		
 * @author danhuang								|_____|_____|___ 品牌维度        
 *													 联想	    戴尔
 *原始方法问题：如果要增加一个品牌，那么每个机型都要改动，如果要增加一个机型（如平板），那么又要在该机型下增加所有品牌。使用桥接模式可以有以下
 *特点：
 *	优点
 *     1、分离抽象接口及其实现部分。提高了比继承更好的解决方案。
 *     2、桥接模式提高了系统的可扩充性，在两个变化维度中任意扩展一个维度，都不需要修改原有系统。
 *     3、实现细节对客户透明，可以对用户隐藏实现细节。
 *	缺点
 *     1、桥接模式的引入会增加系统的理解与设计难度，由于聚合关联关系建立在抽象层，要求开发者针对抽象进行设计与编程。 
 *     2、桥接模式要求正确识别出系统中两个独立变化的维度，因此其使用范围具有一定的局限性。
 */
public class Client {
	public static void main(String[] args) {
		
		//销售联想的笔记本电脑
		Computer c = new Laptop(new Lenovo());
		c.sale();
	}
}
